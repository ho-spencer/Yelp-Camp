=======================================================
January 8, 2024
    (53) Yelp Camp - Refactor Campground Controllers
=======================================================
    Refactor various functions to controllers
        - separate file that exports an object
            - represents campground controller
            - has multiple methods

    campgrounds.js (controllers)
        1. Take function from route (campgrounds.js) and move to controllers file
            - export function controller file - needed in functions 
        2. Require controller file in routes file
        3. Replace function in route with the method name (created in controllers file)


=======================================================
January 4, 2024
    (52) Yelp Camp - Review Permissions
=======================================================
    Protect review routes so that only the "owner" (author) of the review can edit/delete it.
        - also user needs to be logged in to post a reivew (and see the review form)

    review.js (Review Model)
        - added "author" property to the reviewSchema (review model)
        
    reviews.js (routes)
        - added isLoggedIn to the POST route (create a review)
            - msut be logged in to create a review
        - added isLoggedIn and isReviewAuthor middleware to the DELETE route
            - must be logged in AND the owner to delete a review
        - added line to assign a user (the current user) to a created review
    
    show.ejs
        - added logic to only show review form if a user is logged in
        - updated review display to show the author of the review
        - added logic to only show delete button if a user is logged in AND the owner of the review

    campgrounds.js (routes)
        - upated SHOW campground route to now populate the author of each review
            - using "nested" populate
                1. populate ALL the reviews for the campground
                2. populate the author of each review
                3. populate the author of the campground
    
    middleware.js
        - created isReviewAuthor
            - middleware to check if current user is the owner (author) of a review


=======================================================
January 4, 2024
    (52) Yelp Camp - Authorization Middleware Refactor
=======================================================
    Refactor middleware -- move middleware functions from routes files to middleware.js

    campgrounds.js
        - moved validateCampground and isAuthor
            - included ExpressError, JOI campground Schema, Campground model
    
    reviews.js
        - moved validateReview
            - included JOI review Schmea


=======================================================
January 4, 2024
    (52) Yelp Camp - Authorization Middleware
=======================================================
    Create middleware using the logic to check if the author of a campground matches the current user.
        - function: isAuthor()

    campgrounds.js
        - added isAuthor to both edit routes (serve from and submit data)
        - added isAuthor to the delete route


=======================================================
January 4, 2024
    (52) Yelp Camp - Campground Permissions
=======================================================
    Protect campground routes so requests can't be sent using a workaround (ex: Postman)
        - ex: someone could send a delete request from postman and delete a campground even if they arent the owner

    campgrounds.js
        - edit routes (GET and PUT)
            - added logic to protect routes -- checks if author of the campground matches current user
                - if they match, user can access edit form/submit edits


=======================================================
January 4, 2024
    (52) Yelp Camp - Show and Hide Edit/Delete Buttons
=======================================================
    Update Campground SHOW page to only dipslay edit/delete buttons if current user matches the owner of the campground.

    show.ejs
        - added logic to display edit/delete buttons ONLY if:
            1. a user is logged in
            2. campground owner (author) matches current user


=======================================================
January 4, 2024
    (52) Yelp Camp - Adding Authorization
=======================================================
    Add authorization so that a new campground / new review is linked to the user that created it.
        - Only that user can edit/delete the campground/review
    
    campground.js (campground model)
        - add an "author" field to campground model
            - will store the UserID in this field
        
    
    index.js (seeds file)
        - updated seeds file to include a default author (using a random test account)
            - got the UserID from the database (db.users.find() --> get ObjectID of the user)
            - if no author, templates will try to display an author when no campgrounds have any
    
    campgrounds.js (campground routes)
        - SHOW route - updated to .populate() the "author" field
            - only the User ObjectID is stored in campground model
            - need to access "username" of the User --> populate allows us to access User fields in the campground model
        - POST route (add new campground) - updated to populate author field when a user creates a new campground
            - user already added to req object (req.user) by Passport and route already verifies a user is logged in
    
    show.ejs
        - updated campground SHOW page to display the author (who created the campground)


=======================================================
January 3, 2024
    (51) Yelp Camp - ReturnTo Behavior
=======================================================
    Currently: If a user (logged out) tries to access a page that requires you to be logged in,
                they will be redirected to the login page. After a successful login,
                user is NOT redirected to the page they requested intially.

    Goal: Want to redirect user back to the inital page they requested after they login

    middleware.js
        - isLoggedIn()
            - when checking if a user is logged in, we also store orginal url/path requested by user into the session
        - storeReturnTo()
            - created this middleware function to store the value from req.session.returnTo (contains original URL) into res.locals
                - this is needed because of a Passport update that clears the session after a successful login
            - by storing it in res.locals, we will still have access to the original url/path requested after res.session is cleared
    
    users.js
        - updated /login POST route
            - included storeReturnTo() middleware BEFORE passport.authenticate() -- need to store before passport clears the session
            - updated redirect() line to redirect to the stored path or a default path
            - delete returnTo from the session because it's no longer needed after the user is redirected back after loggin in


============================================================
January 3, 2024
    (51) Yelp Camp - Auto Login on Successful Registration
============================================================
    Upated register user route (POST route) to auto login a user if they successfully register.

    user.js
        - using login() helper method from Passport
            - pass in the registered user into the method
            - pass in callback function w/ "err" parameter for any errors


=======================================================
January 3, 2024
    (51) Yelp Camp - currentUser Helper
=======================================================
    Show/Hide links based on if user is logged in or not.
        - Logged Out: show login & register links (hide logout)
        - Logged In: show logout button (hide login / register)

    app.js
        - added req.user (user auto added to req object by Passport) to res.locals
            - variable name: currentUser --> res.locals.currentUser
            - currentUser can be accessed from any route/template
            - used to determine if a user is logged in or not


=======================================================
January 3, 2024
    (51) Yelp Camp - Logout
=======================================================
    Added Logout logic.

    users.js
        - added logout route using Passport's helper method -- logout()
            - auto added to req object --> req.logout()
            - Update from Passport now requires callback function to be passed into the method

    navbar.ejs
        - added login, register, and logout buttons to nav bar
            - aligned on right side of page


=======================================================
January 3, 2024
    (51) Yelp Camp - Login
=======================================================
    middleware.js
        - created file to store middleware (to be able to access from multiple routes in different files)
        - created isLoggedIn() middleware 
            - using helper method from Passport -- isAuthenticated()
            - function checks to make sure user is logged in to access a route
    
    campgrounds.js
        - added isLoggedIn() middleware to "NEW" campground route (must be logged in to access form)
        - added isLoggedIn() middleware to "POST" campground route (must be logged in to submit form data and create new campground)
            - user shouldn't be able to submit data if they can't access form
            - extra layer in case a user tries send a request from somewhere else (ex: Postman)
        - added isLoggedIn() to the Edit Campground and Delete Campground routes


=======================================================
January 2, 2024
    (51) Yelp Camp - Login
=======================================================
    Added login form and routes

    users.js
        - added 2 login routes: serve form and submit data (actual login)
        - submit data route
            - included middleware (and middleware options) provided by Passport to authenticate a user
                - passport.authenticate()
                    - failureFlash: flash message if there is a login failure
                    - failureRedirect: redirect to a page ("/login") if there is a login faliure

    login.ejs
        - form to login
        - includes only username / password fields (no email input to login)
        
    Currently logging in, does not "keep you logged in". No logged in session yet.


=======================================================
January 2, 2024
    (51) Yelp Camp - Register Form
=======================================================
    Setup registration form and necessary routes

    users.js
        - created file for all users routes (registration, login, logout)
        - using Express Router
        - created form render route and form submit route
        - added try/catch block for any errors when user is attempting to register
            - use this instead of the default error handler that is already set up

    register.ejs
        - registration form
            - included boilerplate layout
            - has inputs for username, email, password
            - using same bootstrap validation as the other forms


==============================================================
January 2, 2024
    (51) Yelp Camp - Auth User Model and Configure Passport
==============================================================
    Using Passport.js for authentication in Yelp Camp.
        - Passport
        - passport-local
        - passport-local-mongoose

    User.js
        - User Model
        - UserSchema
            - added email field
            - UserSchema.plugin(passportLocalMongoose)
                - using Passport to add username and password field
    
    app.js
        - configured passport
            - included required middleware (initialze(), session())
            - included static methods from Passport to serialize / deserialize users from the session ("store / unstore" in the session)
                - passport.serializeUser()
                - passport.deserializeUser()
            
    
=======================================================
December 19, 2023
    (49) Yelp Camp - Flash Success & Error Partials
=======================================================
    Setup partials for Flash Success and Flash Error

    flash.ejs
        - created flash partial
        - added logic to flash success message if conditions are met
        - added logic to flash error message if conditions are met

    boilerplate.ejs
        - update to include (use) flash partial

    campgrounds.js
        - added success flash to campground create route and edit route
        - Campgrounds Show Details and Edit Route - added Error Flash
            - flashes message if campground does not exist (user tries to access invalid ID/show page link)

    reviews.js
        - added success flash to reviews create route and delete route


=======================================================
December 19, 2023
    (49) Yelp Camp - Flash Setup
=======================================================
    Add Flash to flash different messages to user.

    app.js
        - added connect-flash
        - add Flash middleware to allow access to flash messages from all routes
            - using res.locals
            - added "success" and "error" so templates will have access to these messages

    campgrounds.js
        - ROUTE TO ADD CAMPGROUND: added a "success" flash message


=======================================================
December 19, 2023
    (49) Yelp Camp - Configuring Session
=======================================================
    Adding Express Session to use Flash and for future authentication.

    app.js
        - added express-session 
            - app now sends cookie with session ID
            - setup session config object (sessionConfig)
                - included cookie options: httpOnly, expires, maxAge
        

=======================================================
December 19, 2023
    (49) Yelp Camp - Serving Static Assets
=======================================================
    validateForms.js
        - moved bootstrap form validation script from boilerplate.ejs
            - required script in boilerplate.ejs
        

===============================================================
December 19, 2023
    (49) Yelp Camp - Restructure Campground and Review Routes
===============================================================
    campgrounds.js
        - Moved campground routes to /routes/campgrounds.js
            - using Express Router
            - updated routes accordingly (ex: app.get() => router.get())
            - set up routes middleware (set prefix and routes to use)
                - "/campgrounds" set as prefix
                - removed "/campgrounds" from routes path (now using prefix instead)
        - update file paths for requiring utilities / models
        - moved validateCampground middleware to campgrounds.js
    
     reviews.js
        - Moved reviews routes to /routes/reviews.js
            - using Express Router
            - updated routes accordingly (ex: app.get() => router.get())
            - set up routes middleware (set prefix and routes to use)
                - "/campgrounds/:id/reviews" set as prefix
                - removed "/campgrounds" from routes path (now using prefix instead)
            - const router = express.Router({ mergeParams: true });
                - pass in option "mergeParams" to access params from main app.js, while in reviews.js
                - review routes need to access ":id" from the routes middleware in app.js
                    - Express Router keeps params separate


=======================================================
December 13, 2023
    (46) Yelp Camp - Deleting Reviews (cont.)
                   - Deleting Campground Middleware
=======================================================
    Summary: Deleting a campground now deletes all reviews associated with that specific campground

    campground.js
        - added Campground deletion middleware to delete associated reviews if campground is deleted
            - using a .post() middleware
                - access to the document (campground) is only available to the function AFTER the campground is found and deleted


=======================================================
December 13, 2023
    (46) Yelp Camp - Deleting Reviews
=======================================================
    app.js
        - added a delete route to delete reviews
            - delete review and remove review's objectID from campground reviews array
        - route needs ID from campground and review
            - path: "/campgrounds/:id/reviews/:reviewId"
        - use mongo operator "$pull" to remove the review's ObjectID from the Campground's reviews array

    show.ejs
        - added form (only 1 button) to delete a review
            - action="/campgrounds/<%= campground._id  %>/reviews/<%= review._id  %>?_method=DELETE"
                - using method override to setup DELETE (form set to POST)


=======================================================
December 13, 2023
    (46) Yelp Camp - Styling Reviews
=======================================================
    Styled reviews on campground details page.

    show.ejs
        - put each review in a card (using boostrap class)
        - reorganized campground details and campground reviews display
            - each section now takes up 6 units of the column


=======================================================
December 13, 2023
    (46) Yelp Camp - Displaying Reviews
=======================================================
    - Add section on campground show page to display reviews for that campground.

    app.js
        - updated campground show route
            - populated 'reviews' array --> .populate("reviews")
                - need this to access review's data in show page
                - only able to access ObjectID before populating

    show.ejs
        -  added loop to loop through the campground's reviews array and display reviews and rating with the campground details


=======================================================
December 13, 2023
    (46) Yelp Camp - Validating Reviews
=======================================================
    app.js
        - added validateReview
            - middleware to validate the review form data
            - added middleware function to the post route for submitting review form data
    
    show.ejs
        - "required" text area input (review form)
        - set review form to NOT use HTML validation
            - set "novalidate" on review form element
            - set added "validated-form" to form class
                - allows JS in boilerplate to look for this class, then add the validation logic
    
    schemas.js
        - added JOI schema to validate review form data


=======================================================
December 13, 2023
    (46) Yelp Camp - Adding the Reviews Model
=======================================================
    app.js
        - added a route to submit a review for a specific campground
    
    show.ejs
        - added review form below campground details (using bootstrap)
            - form includes "range" input - campground rating
            - text area to write a review
        - set form action to "/campgrounds/<%= campground._id  %>/reviews"
        - updated form method to "POST"
    
    review.js
        - created the "Review" model for reviews on each Campground
        - will store ObjectID's of the reviews in a 'reviews' array in Campground Model
        - fixed line to export Review model
    
    campground.js
        - added 'reviews' property
            - array of the Review's ObjectIDs


=======================================================
December 7, 2023
    (43) Yelp Camp - Errors and Validating Data
=======================================================
    app.js
        - added error handling
        - created ExpressError.js and catchAsync.js
            - added wrapper function (catchAsync) to any async functions
        - added generic error handler
            - renders error.ejs (error template)
            - sets status code based on error
            - if no status code or message, default values are set
        - add Joi validation
            - add function validateCampground to validate with Joi schema
                - included function on 'new' and 'edit' campground routes
    
    schemas.js
        - file to store Joi schemas (will have multiple schemas in future)
        - moved Joi "campgroundSchema" to this file
        
    ExpressError.js
        - created error class to handle errors
        - displays status code and error message
        - display error stack trace

    catchAsync.js
        - created wrapper function to catch async errors
    
    error.ejs
        - created template for errors
        - using Bootstrap's Alert component code

    new.ejs
        - updated form to use bootstrap validation
            - added "required" attribute on form inputs
            - added "novalidate" attribute on form element
            - added class="validated-form" on form element
                - for javascript validation code
            - added javascript code
                - from bootstrap docs
                - prevents form submission if there are invalid form fields
                - code placed in boilerplate.ejs
            - added <div> with class="valid-feedback"
                - provides live feedback if user submits form with errors, then updates fields
                - inserted below each from input

    edit.ejs
        - updated form to use bootstrap validation
            - same updates as new.ejs

    boilerplate.ejs
        - added javascript code for form validation


=======================================================
December 4, 2023
    (40) Yelp Camp - Adding Basic Styles
=======================================================
    - added ejs-mate
    - added boilerplate.ejs
        - basic boilerplate for every page
        - created "layouts" folder in "views" folder
            - added boilerplate.ejs
    
    Updated all templates to use boilerplate layout (content now passed into boilerplate layout)
        - edit.ejs
        - index.ejs
        - new.ejs
        - show.ejs

    Navbar
        - got navbar code from bootstrap docs (v5.3)
        - updated classes to make it a dark navbar
            - "navbar-dark"
            - "bg-dark"
        - made navbar sticky (stays on screen when scrolling)
            - add class "sticky-top"
        - create a partial with navbar code (navbar.ejs)
            - created new "partials" directory in "views"
     
    Footer     
        - created footer code
        - made a footer partial
        - display footer on bottom of page
            - using flexbox utilities
            1. Update <body> of boilerplate
                - "d-flex" - use display flex
                - "flex-column" - flexbox is row by default
                - "vh-100" - view height 100 units (full screen height)
            2. use "mt-auto" on footer to move it to bottom of page (margin top)
                - at a minimum, if not enough content, footer will be on bottom of screen
                - always on bottom of page

    Updated Campground Model
        - updated "price" value to Number (previously was String)
        - added "image" property
            - set to String
            - passing image url into text field

    Updated Seeds File (index.js)
        - include image property to seed
            - image property set to url from an Unsplash image collection
                - image will be different everytime we load/reload a page
                - image is not stored (only url of the collection is stored)
        - added description property
            - currently set to lorem ipsum
        - added price property
            - set to a random number
    
    Updated Show All Campgrounds Page (show.ejs)
        - display image
        - display price
        - display description

    Styled "All Campgrounds" Page
        - list each campground in a card, using bootstrap
        - card has image, title, description, location, button to view details

    Styled "Add New Campground" Page
        - use bootstrap to style page
        - put all content in a grid
        - centered page title
        - put form inside a card
            - card is 6 units wide (column width), but offset by 3 units to be in center of page
            - default would be 6 left side units
            - update input's and label's classes with bootstrap values

    Styled "Edit" Page
        - same bootstrap styling as "Add New" page
        - form is inside a card
            - fields pre-populated with current values

    Styled "Show" Page
        - use bootstrap card to display info
            - image
            - title
            - description
            - location
        - add price display
        - edit/delete button included in card
            - display for div containing buttons is "display inline" to have buttons next to each other

    Boilerplate.ejs
        - added bootstrap v5.3
            - added css link and js bundle script
            - added some top margin on main container
                - "mt-5"
        - included navbar partial
        - included footer partial


=======================================================
November 30, 2023
    (39) Yelp Camp Intro - Basic CRUD
=======================================================
    - implemented basic CRUD for Yelp Camp
    - Campground Model -- /models/campground.js
    - app.js -- routes for CRUD functionality

    Seeding Campground database
        - 'seeds' folder
        - cities.js
            - list of cities and info
            - stored in array
        seedHelpers.js
            - list of descriptors and places
            - stored in array
            - used to create "title" of campground
                - descriptor + places
        index.js
            - run to seed database with initial data
            - clears database, then populates with data

    Show All
        - page to list all campgrounds
        - template (show.ejs) loops through array of campgrounds from database and displays

    Show Details
        - page to show details of one campground
        - using findByID()
        - contains link to edit and delete campground

    Create New Campground
        - 2 routes
            - 1 to serve form 
            - 1 to save data into database
        - in new.ejs, name attribute for "title" and "location" is set to "campground[title]" and "campground[location]
                - this syntax ("campground[]") is used for grouping
                - to access "title" and "location"
                    - use "req.body.campground"
                    (if "campground[]" wasn't used and name attribute was just "name="title"", we can acess with just req.body)

    Edit / Update Campground
        - 2 routes
            - 1 to serve edit form
            - 1 to update database
        - Edit Form
            - method="POST"
                - using method override to do a PUT request on the form to update database
            - input boxes pre-populated with current values
            - contains button to campground details page
        - Update
            - put route (using method override on form)
            - using findByIdAndUpdate()

    Delete Campground
        - form with button on show details page
        - form method="POST"
            - method override to use delete request
                - action="/campgrounds/<%= campground._id  %>?_method=DELETE"